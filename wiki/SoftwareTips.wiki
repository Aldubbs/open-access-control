#summary Software usage

= Software Guide =
Once you have downloaded the software, you'll need to set up a few parameters to get started.
----
==Requirements==
In order to install the software on your Arduino, the following is required.

  * The latest [http://code.google.com/p/open-access-control/downloads/list Open Access Control software]. 

  * The latest [http://arduino.cc Arduino IDE] for your Windows, Linux, or MAC system.

  * Some basic hardware to test with. At a minimum, you'll want to get at least one PIN or RFID reader and gook up some LEDs to the output pins to check their status. See the [AccessOverview hardware setup guide] for more info on readers.

----
==Quick Start Guide==
To get started right away, perform the following tasks:
  * Download and unzip the program files. Place the main .PDE file into a directory of your choice.
  * Extract the library files into your Arduino libraries directory. See the [http://arduino.cc/en/Guide/HomePage getting started guide ] for more details.
  * Open the sketch and edit Open_Access_Control.pde. Change:
{{{
#define PRIVPASSWORD 0x1234
}}}
 to something less obvious.
  * Compile and upload the sketch.
  * Start up the Serial Monitor or another terminal. Attach to the Arduino and make sure the console comes up.
  * Scan a tag or enter a 6-digit PIN number at your reader and write down the result.
  * Edit your super static user list to put at least one of these tag values in permanently. You'll want this in case you lock yourself out later.
{{{
#define gonzo   0x1234                  
#define snake   0x1234                 
#define satan   0x1234
long  superUserList[] = { gonzo, snake, satan};  
}}}
  * Compile and uplaod the code again. You should now be able to swipe tags and have the corresponding door pins activate.

This [http://www.securitymagazine.com/articles/requirements-for-card-to-exit-1 article] explains more.
----
==Installing the controller and wiring==
This is one of those times where physical security is needed for there to be any security. We recommend placing the controller, UPS and other electronics in a sturdy enclosure that is located away from the entry points and public area. Locking it up is also a good idea. 

  * All wiring should be run inside walls or conduits and not accessible from outside your perimeter. Consider placing your readers behind glass or at least securing the mounting screws with a drop of Epoxy.  A tamper switch is also an option. Wiegand and serial readers have no protocol security and are vulnerable to skimming, replay and MITM attacks.

  * Document your wiring as you go. Use some cable tags or a labeling machine, and also document the wire pairs that you use for power, signals, etc. While the Open Access Control has protection on data and other lines, you don't really want to keep blowing fuses.

  * Consider installing some terminal blocks to distribute power and ground connections. This results in less mess inside the enclosure.
 
  * Be mindful of what power circuit each device is plugged into. For instance, putting the door magnet and an outside reader on the 12V 'A' rail could make it possible for the door to open if the reader wires were shorted out. You are warned.

  * Use solder and heatshrink tubing or quality crimp connectors and a proper crimper for all terminations. Bad connections are the source of 90% of system problems.

  * If using the alarm zones on the unit, wire up the sensors in series and use "normally closed" sensors for any security-sensitive application. Also place a 0.5-5K resistor near the end of each sensor loop. Once you wire up a zone and "train" the alarm, the software will sense a fault if the zone is ever shorted out. This is called a "supervised" zone on commercial alarms.